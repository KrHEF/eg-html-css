/*
 * Base styles for form elements
 * ========================================================================== */
 /**
 * Base styles for the textput and dropdown.
 */

.textput,
.dropdown {
    --height: 5.6rem;
    --width: 35rem;

    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    position: relative;

    input[type="text"],
    select {
        background-color: getColor('white');
        border: solid 1px getColor('gray3');
        border-radius: 0.8rem;
        display: inline-flex;
        align-items: center;
        color: getColor('gray4');
        font-size: 2rem;
        line-height: 1.3;
        height: var(--height);
        width: var(--width);
        padding: 0 2.4rem;
        position: relative;
        transition: all 0.2s ease;
        vertical-align: baseline;

        &::placeholder {
            color: getColor('gray2');
        }
    
        & ~ .helper {
            background-color: getColor('white');
            border-radius: 1rem;
            display: none;
            align-items: center;
            height: calc(var(--height) - 2px);
            padding: 0 2rem;
            position: absolute;
            right: 1px;
            z-index: 10;
    
            &::after {
                content: '';
                display: block;
                height: 2.4rem;
                width: 2.4rem;
            }
        }
    
        &:disabled {
            color: getColor('gray2');
            border-color: getColor('gray2');
    
            & ~ .helper {
                display: flex;
    
                &::after {
                    background-color: getColor('gray2');
                    @include getMaskImageStyle('lock');
                }
            }
        }
    }
}


 /**
 * Base styles for the checkbox, radio, switch, toggle and toggle-switch.
 */

.checkbox,
.radio,
.switch,
.toggle-switch, 
.toggle {
    --gap: 1.2rem;
    --size: 2.8rem;
    --height: var(--size);
    --width: var(--size);

    color: getColor('gray4');
    display: inline-flex;
    align-items: flex-start;
    justify-content: flex-start;
    position: relative;

    & > input {
        display: none;

        & ~ * {
            margin: 0;
            padding: 2px 0;
            text-align: right;
        }

        & ~ label {
            cursor: pointer;
            display: block;
            line-height: calc(var(--height) - 4px);
            min-height: var(--height);
            min-width: var(--width);
            margin: 0;
            padding: 2px 0;

            & ~ * {
                text-align: left;
            }
        }

        & ~ b {
            display: block;
            height: var(--height);
            width: var(--width);
            pointer-events: none;

            &::before {
                content: '';
                display: block;
                position: absolute;
            }
        }

        &:disabled {

            & ~ label {
                cursor: not-allowed;
                color: getColor('gray2');
            }
        }
    }

    &.disabled {

        &::after {
            content: '';
            cursor: not-allowed;
            background-color: getColor('white');
            display: block;
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            top: 0;
            opacity: 0;
        }
        
        & > input {

            & ~ label {
                color: getColor('gray2') !important;
            }
        }
    }    
}

.checkbox,
.radio,
.switch {

    & > input {

        & ~ label {
            padding: 2px calc(var(--width) + var(--gap)) 2px 0;

            &:empty {
                padding: 0;
                margin: 0 0 0 var(--gap);
            }
        }

        & ~ b + label {
            padding: 2px 0 2px calc(var(--width) + var(--gap));

            &:empty {
                padding: 0;
                margin: 0 var(--gap) 0 0;
            }
        }

        & ~ b {
            position: absolute;
            left: 0;
            top: 0;
        }

        & ~ label + b {
            left: auto;
            right: 0;
        }
    }
}

.switch,
.toggle-switch, 
.toggle {
    --width: 5.2rem;

    & > input {


        & ~ label {
            color: getColor('gray3');
        }

        &.on + label,
        &.off + label,
        & ~ label .off,
        & ~ label .on {
            color: getColor('gray4');
        }

        & ~ b {
            background-color: getColor('white');
            border: solid 1px getColor('gray2');
            border-radius: calc(var(--height) / 2);

            &::before {
                background-color: getColor('gray2');
                border-radius: 50%;
                height: calc(var(--height) - 4px);
                width: calc(var(--height) - 4px);
                transition: left 0.5s ease, right 0.5s ease;
                top: 1px;
                left: 1px;
            }
        }

        &:disabled {
            @extend %disabled;
        }
    }

    &.disabled {

        & > input {
            @extend %disabled;
        }
    }

    %disabled {

        & ~ b {
            background-color: getColor('gray2') !important;
            border-color: getColor('gray2') !important;

            &::before {
                background-color: getColor('gray3');
                opacity: 0.25;
            }
        }
    }
}
    